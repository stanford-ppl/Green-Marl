Procedure RandomNodeSampling(G: Graph, N: Int, S: Node_Set) 
{
	Double prob = 1 / (Double) N;
	Foreach(v: G.Nodes) {
		Double dice = Uniform();
		If (dice < prob)
        	S.Add(v);
   }
}

Procedure RandomDegreeNodeSampling(G: Graph, N: Int, S: Node_Set)
{
   Node_Prop<Double> prob;
   Long degSum = Sum(n: G.Nodes) {n.Degree()};
   G.prob = G.Degree() / (Double) degSum * N;
   Foreach(v: G.Nodes) {
       Double dice = Uniform();
       If (dice < v.prob)
           S.Add(v);
   }
}

Procedure RandomWalkSamplingWithRandomJump(G: Graph, N: Int, c : Double, S: Node_Set)
{
   Node(G) n = G.PickRandom();
   Int count = 0;
   While (count < N) {
     S.Add(n);  
     count++;
     If ((n.Degree() == 0) || (Uniform() < c)) {
         n = G.PickRandom();
     }
     Else {
         n = n.PickRandomNbr(); 
     }
   }        
}