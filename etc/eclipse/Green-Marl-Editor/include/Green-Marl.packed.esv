Module("Green-Marl.main.packed",Imports([Import("Green-Marl.main"),Import("Green-Marl-Builders"),Import("Green-Marl-Colorer"),Import("Green-Marl-Completions"),Import("Green-Marl-Folding"),Import("Green-Marl-Outliner"),Import("Green-Marl-References"),Import("Green-Marl-Syntax"),Import("Green-Marl-Builders.generated"),Import("Green-Marl-Colorer.generated"),Import("Green-Marl-Completions.generated"),Import("Green-Marl-Folding.generated"),Import("Green-Marl-Outliner.generated"),Import("Green-Marl-References.generated"),Import("Green-Marl-Syntax.generated")]),[Language(" General properties",[LanguageName("Green-Marl"),LanguageId("GreenMarlEditor"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the Green-Marl language\"")),URL("http://strategoxt.org"),Extensions(Values(["gm"])),Table("include/Green-Marl.tbl"),StartSymbols([Sort("Prog")])]),Builders("",[SemanticProvider("include/green_marl.ctree"),SemanticProvider("include/green_marl-java.jar"),SemanticObserver(Strategy("editor-analyze")),Builder(String("\"Generate Java code (for selection)\""),Strategy("generate-java"),[OpenEditor,RealTime]),Builder(String("\"Show abstract syntax (for selection)\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta,Source])]),Refactorings("",[PrettyPrint(Strategy("pp-green_marl-string")),Refactoring([Sort("ID")],String("\"Rename Entity\""),Strategy("rename-entity"),[Source,Cursor],[Shortcut(InteractionId(String("\"org.eclipse.jdt.ui.edit.text.java.rename.element\""))),UserInput([IdInputField(String("\"new name\""),String("\"\""))])])]),Colorer("",[ColorRule(Sort("Prim-type"),AttributeRef("darkgreen")),ColorRule(Sort("Graph-type"),AttributeRef("darkgreen")),ColorRule(Sort("Property"),AttributeRef("darkgreen")),ColorRule(Sort("NodeEdge-type"),AttributeRef("darkgreen")),ColorRule(Sort("Set-type"),AttributeRef("darkgreen")),ColorRule(Sort("INT-NUM"),AttributeRef("darkred")),ColorRule(Sort("FLOAT-NUM"),AttributeRef("darkred")),ColorRule(Sort("BOOL-VAL"),AttributeRef("darkred"))]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("63","127","95"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplateEx([Sort("Start")],NoCompletionPrefix,[String("\"module \""),Placeholder("<m>")],[Blank]),CompletionTemplateEx([Sort("Definition")],NoCompletionPrefix,[String("\"entity \""),Placeholder("<e>"),String("\" {\""),Cursor,String("\"}\"")],[Blank]),CompletionTemplateEx([Sort("Property")],CompletionPrefix(String("\"property : Type\"")),[Placeholder("<x>"),String("\" : \""),Placeholder("<T>")],[Blank])]),Completions("",[CompletionProposer(Strategy("editor-complete")),CompletionTrigger(String("\":\""),None)]),Completions("",[CompletionKeyword(String("\"+INF\""),None),CompletionKeyword(String("\"-INF\""),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Prog"),Constructor("Prog")),None),FoldRule(SortAndConstructor(Sort("Proc-def"),Constructor("Proc-def")),None),FoldRule(SortAndConstructor(Sort("Proc-head"),Constructor("Proc-head")),None),FoldRule(SortAndConstructor(Sort("Arg-declist1"),Constructor("Arg-declist1")),None),FoldRule(SortAndConstructor(Sort("Arg-decl"),Constructor("Arg-decl")),None),FoldRule(SortAndConstructor(Sort("Arg-target"),Constructor("Arg-target")),None),FoldRule(SortAndConstructor(Sort("Id-comma-list"),Constructor("Id-comma-list")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(Sort("OptId1"),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(SortAndConstructor(Sort("Node-type"),Constructor("Node-type")),None),FoldRule(SortAndConstructor(Sort("Edge-type"),Constructor("Edge-type")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(SortAndConstructor(Sort("Set-type"),Constructor("Set-type")),None),FoldRule(SortAndConstructor(Sort("Set-type"),Constructor("Set-type")),None),FoldRule(SortAndConstructor(Sort("Set-type"),Constructor("Set-type")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(SortAndConstructor(Sort("Property"),Constructor("Property")),None),FoldRule(SortAndConstructor(Sort("Proc-head"),Constructor("Proc-head")),None),FoldRule(SortAndConstructor(Sort("Arg-declist2"),Constructor("Arg-declist2")),None),FoldRule(SortAndConstructor(Sort("Proc-body"),Constructor("Proc-body")),None),FoldRule(SortAndConstructor(Sort("Sent-variable-decl"),Constructor("Sent-variable-decl")),None),FoldRule(SortAndConstructor(Sort("Var-target"),Constructor("Var-target")),None),FoldRule(SortAndConstructor(Sort("Sent-user"),Constructor("Sent-user")),None),FoldRule(SortAndConstructor(Sort("Lhs-list"),Constructor("Lhs-list")),None),FoldRule(SortAndConstructor(Sort("Lhs-list2"),Constructor("Lhs-list2")),None),FoldRule(SortAndConstructor(Sort("Rhs-list2"),Constructor("Rhs-list2")),None)]),Outliner(" Default outliner        ",[OutlineRule(SortAndConstructor(Sort("Proc-head"),Constructor("Proc-head"))),OutlineRule(SortAndConstructor(Sort("Arg-decl"),Constructor("Arg-decl"))),OutlineRule(SortAndConstructor(Sort("Proc-head"),Constructor("Proc-head"))),OutlineRule(SortAndConstructor(Sort("Sent-variable-decl"),Constructor("Sent-variable-decl"))),OutlineRule(SortAndConstructor(Sort("Sent-user"),Constructor("Sent-user"))),OutlineRule(SortAndConstructor(Sort("Lhs-list2"),Constructor("Lhs-list2"))),OutlineRule(SortAndConstructor(Sort("Rhs-list2"),Constructor("Rhs-list2")))]),References("",[ReferenceRule("_",Strategy("editor-resolve")),HoverRule("_",Strategy("editor-hover"))]),Language(" Syntax properties (static defaults)",[LineCommentPrefix(String("\"//\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])