module lib/refactor-common.generated

imports
  libstratego-lib
  lib/editor-common.generated
  

strategies //transformation

/**
 * Replaces elements in a list (once, starting from the right)
 * @param match strategy for partial list
 * @param new elements List(b)
 * @type List(a) -> List(a,b)
 */
replace-sublist(match-sublist|new-elems): 
  list -> <
    at-suffix(match-sublist;!new-elems) <+
    (
      init; 
      replace-sublist(match-sublist|new-elems);
      at-end(![<last> list])
    )
  > list 

/**
 * Inserts an element at a given AST position
 * @param List(Int), denoting an AST position
 * @param inserted list element 
 * @type Term -> Term
 */
insert-elem(|pos, elem)=
  insert-sublist(|pos, [elem])

/**
 * Inserts a list of elements at a given AST position
 * @param List(Int), denoting an AST position
 * @param inserted list elements 
 * @type Term -> Term
 */	
insert-sublist(|pos, elems)=
  at-position(
    split-at(|<last> pos);
    ?(prefix, suffix);
    <concat>[prefix, elems, suffix]
    |<init> pos
  )


strategies //user-input

/**
 * Opens an input dialog for one string value that represents an identifier
 * The language is used to check if the input value matches the identifier pattern
 * @type (String, String, String, String) -> String
 */
input-dialog:
  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
  
input-dialog:
  (title, label, default-value) -> <input-dialog>("", title, label, default-value)

strategies //pp-table
	
get-pp-table=
  import-term(include/Green-Marl.generated.pp.af)
	
