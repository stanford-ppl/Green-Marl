module refactor

imports
  lib/refactor-common.generated
  include/Green-Marl
  lib/editor-common.generated  
  green_marl

rules
 
  rename-entity:
    (newname, selected-name, position, ast, path, project-path) -> ([(ast, new-ast)], fatal-errors, errors, warnings)
    with
      new-ast  := <topdown(try(rename-type(|selected-name, newname)))> ast; 
      (errors, warnings) := <semantic-constraint-issues> (ast, new-ast);
      fatal-errors := []

  rename-type(|old-name, new-name):
    Entity(old-name, y) -> Entity(new-name, y)

  rename-type(|old-name, new-name):
    Type(old-name) -> Type(new-name)
    
  semantic-constraint-issues:
    (ast, new-ast) -> (<diff>(new-errors, errors), <diff>(new-warnings, warnings))
    where
    	(_, errors, warnings, _) := <editor-analyze> (ast, "", "");
    	(_, new-errors, new-warnings, _) := <editor-analyze> (new-ast, "", "")
